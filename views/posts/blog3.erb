date: 2013-11-18

<h1>Adventures in Pair Programming</h1>

<p>
  There’s a lot of talk going around about this idea of pair programming. Part of the Agile Methodology, pair programming allows two people to work on one computer— one driving, the other navigating a bit, not unlike a long road trip. I think that analogy is pretty sustainable and extends throughout the experience, given that the wrong two people placed in a car (or placed in the wrong seat in the car) can make for an incredibly stressful ride where no one feels comfortable asking for a bathroom break and neither person can bear the song on the radio. 
</p>

<p>
  This week marks my first venture into reading CSV files, using one million trillion (approximately) blocks, and (!) working on a single project for five days pair programming (WITH ANOTHER HUMAN BEING NO MURDER ALLOWED).
</p>

<p>
  The capital letters signify— subtly— that working with someone else can be a real challenge for me. I hated it as a student because I was a rock star academically (straightens imaginary tie) and felt burdened with the load. My teachers would strategically place me with a bunch of knuckleheads who I essentially chaperoned. Turns out this was great for me socially, since lord knows I needed to loosen up, but permanently imbedded in me some resentment for the grouping. And yet when I became a teacher, I consistently paired students up, and listened to their complaints, and watched their efforts continually unravel, and stood by my call; when they worked, pair projects made some amazing things happen. One student taught the other, the second student introduced something new to the first, they both had fun . . . Maybe one asked the other to Homecoming. Magic stuff.
</p>

<p>
  I had all this in my mind before we started, so I was anxious.  Plus, I was also a little worried— and humbled-- that this time I might be the one requiring extra help (unclips imaginary tie).
</p>

<p>But!</p>

<p>
  Turns out, making a program that inventories imaginary farm vendors was wonderful; yes, because I was learning; yes, because now I get CSVs; yes, because attr_accessor is beginning to gel, but mostly because I worked well with a great partner. It's not news that a quality colleague helps produce quality product in a pleasant work environment, but it’s *sorta* news to me.
</p>

<p>Was our pairing magic? Were we destined to be together?</p>

<p>
  Maybe like all pairings in Bambi movies and teen friendship sagas, a little chemistry is important; with my partner, however, I found that we did well because we communicated. Again, self-help shelves across the nation’s bookstores groan under the weight of my epiphany that communication is integral to making things (relationships, etc) work. Nevertheless, I think it is worth reiterating in this context:
</p>

<h2>Tips for Pair Programming in a Learning Environment</h2>

<h3>Questions are super important.</h3>

<h4>a. Know how to ask questions.</h4>

<p>
  Sometimes you’re confused, and it’s hard to put your finger on what’s causing confusion. Continually asking “Why did you do that?” or stating “I don’t get it,” can be useful, but also demands a lot of work from your partner. If I couldn’t isolate the source of confusion, I would try to see if I could go back through Elizabeth’s code and explain what was happening. If I got stuck, or misspoke, Elizabeth could clarify.
</p> 

<h4>b. Don’t be afraid to ask questions.</h4>
<p>
  Don’t assume you and your partner are on the same page— which is where you need to be. Check in.
</p>      
<p>“Can you back up and let me see if I can walk through your logic?”</p>  

<p>“Would it also work to . . . ?”</p>
<p>“Could we also try/consider  . . . ?”</p>

<h4>c. Accept questions with patience.</h4>
<p>
  We often assume that the first solution we see is the best one, or that the logic is obvious. Getting our logic questioned can feel frustrating. But there are two things to consider: I) Someday you will need help, so don’t be a butthead II) There’s a solid chance that your partner’s brain is working on something that could ultimately provide another, or better, answer. Seriously. Give your partner some credit. 
</p>
<h3>Negotiate pace.</h3>
<p>
  I have worked with partners that move at breakneck speed. Sometimes that works, and sometimes it means they make errors— but if I’m not moving at their pace, I neither understand nor can help catch errors. I don’t go running with someone that moves at a 6 min mile, but if I do, I say, “Hey, (gasp) this pace is (gasp) impossible for me— can we slow down, or take breaks?”
</p>
<p>
  Sometimes you move faster than your partner, and feel frustrated that you have to slow down for them. See 1c(I), and also, use the time that they are taking to process to do something else. If my partner asks for a minute, I get tea. I take a walk. I start my homework. I focus far out the window, like I’ve heard I should do every 20 minutes. I mean, there’re options.
</p>
<h3>Be so grateful.</h3>
<p>
  I don’t know about you, but I love getting praise. It’s so nice to feel appreciated, so appreciate your partner. One time, I figured a thing out in code, and my partner Ellen said, “Bßrilliant!” and I was so excited that I contributed, I think I broke a sweat. I have met people that are uncomfortable with praise, and I cock my head at them like a German Shepard, but I try to respect their strangeness by saluting them with solemn nods.Either way: it’s a team effort— and teammates cheer each other on.
</p>
<h3>Laugh.</h3>
<p>
  It’s frustrating trying to figure out code, and working with a partner can exacerbate that. Elizabeth and I found ways to break the tension by finding the comedy in the situation. We made a secret oh_hell_a_cougar method, in which a cougar alert prints should you search for the wrong market. You’re thinking, “That’s not that awesome.” But we thought it was, and that’s my point. We laughed so much that I had a blast making a program that reads a farmer market database.
</p>
<p>
  I’ll stop at four for today, because that’s one more than most fables bother with. But I think this is a good start, right?
</p>

<p>
  <em>This blog entry is dedicated to my program buddy, Elizabeth Uselton. May she code in peace now that we’re apart.</em>
</p>